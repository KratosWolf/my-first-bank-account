'use client';

import { useSession, signOut } from 'next-auth/react';
import { useRouter } from 'next/navigation';
import { useEffect, useState } from 'react';
import { ChildrenStorage, Child, AVATAR_OPTIONS } from '@/lib/storage/children';

type TabType = 'overview' | 'children' | 'requests' | 'limits' | 'categories' | 'reports';

export default function DashboardPage() {
  const { data: session, status } = useSession();
  const router = useRouter();
  const [activeTab, setActiveTab] = useState<TabType>('overview');
  const [children, setChildren] = useState<Child[]>([]);
  const [showAddChild, setShowAddChild] = useState(false);

  useEffect(() => {
    if (status === 'loading') return;
    if (!session) {
      router.push('/auth/signin');
      return;
    }
    // Carregar dados das crian√ßas (mock por enquanto)
    loadChildren();
  }, [session, status, router]);

  const loadChildren = () => {
    if (!session?.user?.id) return;
    
    try {
      const savedChildren = ChildrenStorage.getAll(session.user.id);
      setChildren(savedChildren);
    } catch (error) {
      console.error('Error loading children:', error);
      setChildren([]);
    }
  };

  const [childForm, setChildForm] = useState({
    name: '',
    pin: '',
    avatar: 'üëß'
  });
  const [formErrors, setFormErrors] = useState<{[key: string]: string}>({});
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleSaveChild = async () => {
    if (!session?.user?.id) return;
    
    setIsSubmitting(true);
    setFormErrors({});
    
    // Valida√ß√µes
    const errors: {[key: string]: string} = {};
    
    if (!ChildrenStorage.validateName(childForm.name)) {
      errors.name = 'Nome deve ter entre 2 e 50 caracteres';
    }
    
    if (!ChildrenStorage.validatePin(childForm.pin)) {
      errors.pin = 'PIN deve ter exatamente 4 d√≠gitos';
    }
    
    // Verificar PIN √∫nico
    const existingChild = children.find(c => c.pin === childForm.pin);
    if (existingChild) {
      errors.pin = 'Este PIN j√° est√° sendo usado por outra crian√ßa';
    }
    
    if (Object.keys(errors).length > 0) {
      setFormErrors(errors);
      setIsSubmitting(false);
      return;
    }
    
    try {
      const newChild: Child = {
        id: ChildrenStorage.generateId(),
        name: childForm.name.trim(),
        pin: childForm.pin,
        balance: 0,
        level: 1,
        points: 0,
        avatar: childForm.avatar,
        createdAt: new Date().toISOString(),
        parentId: session.user.id
      };
      
      ChildrenStorage.save(newChild);
      loadChildren();
      
      // Reset form
      setChildForm({ name: '', pin: '', avatar: 'üëß' });
      setShowAddChild(false);
      
    } catch (error) {
      console.error('Error saving child:', error);
      setFormErrors({ general: 'Erro ao salvar crian√ßa. Tente novamente.' });
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleDeleteChild = (childId: string) => {
    if (confirm('Tem certeza que deseja remover esta crian√ßa?')) {
      try {
        ChildrenStorage.delete(childId);
        loadChildren();
      } catch (error) {
        console.error('Error deleting child:', error);
        alert('Erro ao remover crian√ßa');
      }
    }
  };

  if (status === 'loading') {
    return (
      <div style={{
        minHeight: '100vh',
        background: 'linear-gradient(135deg, #dbeafe 0%, #e0e7ff 100%)',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center'
      }}>
        <div style={{ textAlign: 'center' }}>
          <div style={{
            width: '48px',
            height: '48px',
            border: '3px solid #3b82f6',
            borderTop: '3px solid transparent',
            borderRadius: '50%',
            margin: '0 auto 16px',
            animation: 'spin 1s linear infinite'
          }}></div>
          <p style={{ color: '#1e40af' }}>Carregando...</p>
        </div>
      </div>
    );
  }

  if (!session) {
    return null; // Will redirect
  }

  // Componente para renderizar o conte√∫do de cada aba
  const renderTabContent = () => {
    switch (activeTab) {
      case 'overview':
        return (
          <div>
            <h2 style={{ fontSize: '1.5rem', color: '#1f2937', marginBottom: '1.5rem' }}>Vis√£o Geral da Fam√≠lia</h2>
            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '1.5rem' }}>
              <div style={{ background: '#f0f9ff', padding: '1.5rem', borderRadius: '8px', border: '1px solid #bae6fd' }}>
                <h3 style={{ color: '#0c4a6e', marginBottom: '1rem' }}>Total Familiar</h3>
                <p style={{ fontSize: '2rem', fontWeight: 'bold', color: '#0c4a6e' }}>R$ {children.reduce((sum, child) => sum + child.balance, 0).toFixed(2)}</p>
              </div>
              <div style={{ background: '#f0fdf4', padding: '1.5rem', borderRadius: '8px', border: '1px solid #bbf7d0' }}>
                <h3 style={{ color: '#14532d', marginBottom: '1rem' }}>Crian√ßas Cadastradas</h3>
                <p style={{ fontSize: '2rem', fontWeight: 'bold', color: '#14532d' }}>{children.length}</p>
              </div>
            </div>
          </div>
        );
      
      case 'children':
        return (
          <div>
            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1.5rem' }}>
              <h2 style={{ fontSize: '1.5rem', color: '#1f2937' }}>Gerenciar Crian√ßas</h2>
              <button
                onClick={() => setShowAddChild(true)}
                style={{
                  background: '#3b82f6',
                  color: 'white',
                  border: 'none',
                  borderRadius: '8px',
                  padding: '0.75rem 1.5rem',
                  fontSize: '1rem',
                  cursor: 'pointer'
                }}
              >
                + Adicionar Crian√ßa
              </button>
            </div>
            
            {children.length === 0 ? (
              <div style={{ textAlign: 'center', padding: '3rem', background: '#f9fafb', borderRadius: '8px' }}>
                <p style={{ color: '#6b7280', marginBottom: '1rem' }}>Nenhuma crian√ßa cadastrada ainda</p>
                <button
                  onClick={() => setShowAddChild(true)}
                  style={{
                    background: '#3b82f6',
                    color: 'white',
                    border: 'none',
                    borderRadius: '8px',
                    padding: '0.75rem 1.5rem',
                    fontSize: '1rem',
                    cursor: 'pointer'
                  }}
                >
                  Cadastrar Primeira Crian√ßa
                </button>
              </div>
            ) : (
              <div style={{ display: 'grid', gap: '1rem' }}>
                {children.map(child => (
                  <div key={child.id} style={{
                    background: 'white',
                    border: '1px solid #e5e7eb',
                    borderRadius: '8px',
                    padding: '1.5rem',
                    display: 'flex',
                    justifyContent: 'space-between',
                    alignItems: 'center'
                  }}>
                    <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>
                      <div style={{ fontSize: '2rem' }}>{child.avatar}</div>
                      <div>
                        <h3 style={{ fontSize: '1.125rem', fontWeight: 'bold', color: '#1f2937' }}>{child.name}</h3>
                        <p style={{ color: '#6b7280', fontSize: '0.875rem' }}>N√≠vel {child.level} ¬∑ {child.points} pontos</p>
                      </div>
                    </div>
                    <div style={{ textAlign: 'right' }}>
                      <p style={{ fontSize: '1.25rem', fontWeight: 'bold', color: '#059669' }}>R$ {child.balance.toFixed(2)}</p>
                      <p style={{ color: '#6b7280', fontSize: '0.875rem' }}>Saldo atual</p>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        );
      
      default:
        return <div style={{ textAlign: 'center', padding: '3rem', color: '#6b7280' }}>Funcionalidade em desenvolvimento</div>;
    }
  };

  return (
    <div style={{
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #dbeafe 0%, #e0e7ff 100%)',
      padding: '1rem'
    }}>
      <div style={{
        maxWidth: '1200px',
        margin: '0 auto'
      }}>
        {/* Cabe√ßalho */}
        <div style={{
          background: 'white',
          borderRadius: '12px',
          padding: '1.5rem',
          marginBottom: '1.5rem',
          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center'
        }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>
            {session.user?.image && (
              <img
                src={session.user.image}
                alt="Avatar"
                style={{
                  width: '48px',
                  height: '48px',
                  borderRadius: '50%',
                  border: '2px solid #3b82f6'
                }}
              />
            )}
            <div>
              <h1 style={{ fontSize: '1.5rem', color: '#1f2937', margin: 0 }}>üè¶ Banco da Fam√≠lia</h1>
              <p style={{ color: '#6b7280', margin: 0 }}>Ol√°, {session.user?.name?.split(' ')[0]}</p>
            </div>
          </div>
          <button
            onClick={() => signOut({ callbackUrl: '/' })}
            style={{
              background: '#ef4444',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              padding: '0.5rem 1rem',
              fontSize: '0.875rem',
              cursor: 'pointer'
            }}
          >
            üö™ Sair
          </button>
        </div>

        {/* Navega√ß√£o por abas */}
        <div style={{
          background: 'white',
          borderRadius: '12px',
          overflow: 'hidden',
          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'
        }}>
          <div style={{ borderBottom: '1px solid #e5e7eb' }}>
            <div style={{ display: 'flex', overflowX: 'auto' }}>
              {[
                { id: 'overview', label: 'Resumo', icon: 'üìä' },
                { id: 'children', label: 'Crian√ßas', icon: 'üëß' },
                { id: 'requests', label: 'Pedidos', icon: 'üõã' },
                { id: 'limits', label: 'Limites', icon: '‚öôÔ∏è' },
                { id: 'categories', label: 'Categorias', icon: 'üìÅ' },
                { id: 'reports', label: 'Relat√≥rios', icon: 'üìà' }
              ].map(tab => (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id as TabType)}
                  style={{
                    background: activeTab === tab.id ? '#eff6ff' : 'transparent',
                    border: 'none',
                    borderBottom: activeTab === tab.id ? '3px solid #3b82f6' : '3px solid transparent',
                    padding: '1rem 1.5rem',
                    fontSize: '0.875rem',
                    fontWeight: activeTab === tab.id ? 'bold' : 'normal',
                    color: activeTab === tab.id ? '#1e40af' : '#6b7280',
                    cursor: 'pointer',
                    whiteSpace: 'nowrap',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '0.5rem'
                  }}
                >
                  {tab.icon} {tab.label}
                </button>
              ))}
            </div>
          </div>
          
          {/* Conte√∫do da aba */}
          <div style={{ padding: '2rem' }}>
            {renderTabContent()}
          </div>
        </div>
      </div>

      {/* Modal para adicionar crian√ßa */}
      {showAddChild && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          background: 'rgba(0, 0, 0, 0.5)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 1000
        }}>
          <div style={{
            background: 'white',
            borderRadius: '12px',
            padding: '2rem',
            width: '90%',
            maxWidth: '400px',
            boxShadow: '0 20px 25px rgba(0, 0, 0, 0.1)'
          }}>
            <h3 style={{ fontSize: '1.25rem', color: '#1f2937', marginBottom: '1.5rem' }}>Adicionar Nova Crian√ßa</h3>
            <div style={{ marginBottom: '1rem' }}>
              <label style={{ display: 'block', marginBottom: '0.5rem', color: '#374151', fontSize: '0.875rem' }}>Nome da Crian√ßa</label>
              <input
                type="text"
                placeholder="Digite o nome..."
                style={{
                  width: '100%',
                  padding: '0.75rem',
                  border: '1px solid #d1d5db',
                  borderRadius: '8px',
                  fontSize: '1rem'
                }}
              />
            </div>
            <div style={{ marginBottom: '1.5rem' }}>
              <label style={{ display: 'block', marginBottom: '0.5rem', color: '#374151', fontSize: '0.875rem' }}>PIN de 4 d√≠gitos</label>
              <input
                type="password"
                maxLength={4}
                placeholder="0000"
                style={{
                  width: '100%',
                  padding: '0.75rem',
                  border: '1px solid #d1d5db',
                  borderRadius: '8px',
                  fontSize: '1rem',
                  textAlign: 'center',
                  letterSpacing: '0.5rem'
                }}
              />
            </div>
            <div style={{ display: 'flex', gap: '1rem' }}>
              <button
                onClick={() => setShowAddChild(false)}
                style={{
                  flex: 1,
                  background: '#f3f4f6',
                  color: '#374151',
                  border: 'none',
                  borderRadius: '8px',
                  padding: '0.75rem',
                  fontSize: '1rem',
                  cursor: 'pointer'
                }}
              >
                Cancelar
              </button>
              <button
                style={{
                  flex: 1,
                  background: '#3b82f6',
                  color: 'white',
                  border: 'none',
                  borderRadius: '8px',
                  padding: '0.75rem',
                  fontSize: '1rem',
                  cursor: 'pointer'
                }}
              >
                Salvar
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}